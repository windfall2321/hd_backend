<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.hd_backend.mapper.UserMapper">

    <select id="findByName" resultType="com.hd.hd_backend.entity.User">
        SELECT *
        FROM user
        WHERE name=#{name}
    </select>
    
    <select id="findByPhone" resultType="com.hd.hd_backend.entity.User">
        SELECT *
        FROM user
        WHERE phone=#{phone}
    </select>
    <select id="findById" resultType="com.hd.hd_backend.entity.NormalUser">
        SELECT *
        FROM normal_user nu
                 LEFT JOIN user u ON u.id=nu.user_id
        WHERE user_id = #{id}
    </select>

    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO user (name, password,phone, is_admin, profile_picture)
        VALUES (#{name}, #{password}, #{phone}, #{isAdmin}, #{profilePicture})
    </insert>

    <insert id="insertNormalUser" parameterType="com.hd.hd_backend.entity.NormalUser" >
        INSERT INTO normal_user (user_id, weight, age, height,  activity_factor, gender)
        VALUES (#{id}, #{weight}, #{age}, #{height},  #{activityFactor}, #{gender})
    </insert>

    <update id="blockById">
        UPDATE normal_user 
        SET is_blocked = 1 
        WHERE user_id = #{userId}
    </update>

    <update id="update" parameterType="com.hd.hd_backend.entity.NormalUser">
        UPDATE normal_user nu
            LEFT JOIN user u ON u.id=nu.user_id
        SET 
            name = #{name},
            password = #{password},
            profile_picture = #{profilePicture},
            weight = #{weight},
            age = #{age},
            height = #{height},
            phone = #{phone},
            point = #{point}
        WHERE nu.user_id = #{id};

    </update>



    <select id="getFoodRecord" resultType="com.hd.hd_backend.dto.FoodRecordDTO">
        SELECT 
            fr.id,
            fr.user_id,
            fr.food_id,
            fr.amount,
            fr.record_time,
            fi.food_name as foodName
        FROM food_record fr
        LEFT JOIN food_item fi ON fr.food_id = fi.id
        WHERE fr.user_id = #{userId}
    </select>

    <select id="getAllFoodRecord" resultType="com.hd.hd_backend.dto.FoodRecordDTO">
        SELECT 
            fr.id as foodRecordId,
            fr.record_time as recordTime,
            fr.user_id as userId,
            fr.food_id as foodId,
            fr.food_weight as foodWeight,
            fr.calories,
            fr.fat,
            fr.protein,
            fr.carbohydrates,
            fr.sodium,
            fr.potassium,
            fr.dietary_fiber as dietaryFiber,
            fi.food_name as foodname
        FROM food_record fr
        LEFT JOIN food_item fi ON fr.food_id = fi.id
        WHERE fr.user_id = #{userId}
    </select>

    <update id="unblockById">
        UPDATE normal_user
        SET is_blocked = 0
        WHERE user_id = #{userId}
    </update>
    
    <select id="findAllNormalUsers" resultType="com.hd.hd_backend.entity.NormalUser">
        SELECT u.*, n.weight, n.age, n.height, n.gender, n.activity_factor, n.is_blocked
        FROM user u
        LEFT JOIN normal_user n ON u.id = n.user_id
        WHERE u.is_admin = 0
    </select>
</mapper> 